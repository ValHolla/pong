# task cli documentation
# https://taskfile.dev/usage/
# https://taskfile.dev/styleguide/

version: "3"

env:
    LOG_LEVEL:
        sh: echo "${LOG_LEVEL:-DEBUG}"

tasks:
    # poetry cli documentation
    # https://python-poetry.org/docs/cli/

    install:
        aliases: [i]
        desc: Installs the project dependencies via poetry install
        cmds:
            - poetry install --no-root
            - poetry lock --no-update
            - poetry install --sync --no-root

    fmt:
        aliases: [f]
        desc: Format with isort & black via poetry
        cmds:
            # https://pycqa.github.io/isort/
            - poetry run isort . -v
            # https://black.readthedocs.io/
            - poetry run black . -v

    lint:
        aliases: [l]
        desc: Run pylint via poetry
        cmds:
            # https://pylint.readthedocs.io/
            - poetry run pylint . --recursive=y

    # test:
    #     aliases: [t]
    #     desc: Run tests & coverage via poetry
    #     cmds:
    #         # https://docs.pytest.org/
    #         - poetry run pytest {{.CLI_ARGS}}

    # flt:
    #     desc: Run fmt, lint, & test
    #     cmds:
    #         - task: fmt
    #         - task: lint
    #         - task: test

    # build:
    #     aliases: [b]
    #     desc: Build artifact.zip package for deployment via poetry
    #     cmds:
    #         - rm -rf dist
    #         - rm -rf build
    #         - poetry build
    #         - poetry run pip install -t build/package dist/*.whl
    #         - cd build/package ; zip -r ../artifact.zip . -x '*.pyc'

    # deploy:
    #     aliases: [d]
    #     desc: Copy local artifact.zip from build task to s3 using aws cli
    #     cmds:
    #         - aws s3 cp build/artifact.zip s3://internal-release-us-west-2-213195788881-pcf-ehi/image-metadata/image-metadata-{{ .GIT_BRANCH }}-{{ .GIT_COMMIT }}.zip --region us-west-2
    #     preconditions:
    #         - test build/artifact.zip
    #     vars:
    #         GIT_COMMIT:
    #             sh: git log -n 1 --format=%h
    #         GIT_BRANCH:
    #             sh: git branch --show-current | tr '/' '-'

    # release:
    #     aliases: [r]
    #     desc: Runs build task, then runs the deploy task
    #     cmds:
    #         - task: build
    #         - task: deploy

    # all:
    #     aliases: [a]
    #     desc: Run all tasks in order
    #     cmds:
    #         - task: install
    #         - task: fmt
    #         - task: lint
    #         - task: test
    #         - task: release